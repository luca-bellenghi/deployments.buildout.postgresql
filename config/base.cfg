[buildout]
extensions=
    buildout.threatlevel

parts =
    getpostgresql
    postgresql
    postgresqlconf
    postgresqlinit
    pgsql-symlinks
    psycopg2
    backup

show-picked-versions = true
versions = versions

[config]
projectname = project
dbname = dbname
adminuser = admin
adminpassword = F!P05tgr355
postgres_version = 9.3.2
postgres_pkg_name = postgresql-${config:postgres_version}.tar.bz2
postgresqlurl = http://ftp.postgresql.org/pub/source/v${config:postgres_version}/${config:postgres_pkg_name}
port = 5455

[getpostgresql]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
    test -e ${buildout:directory}/downloads || \
        mkdir ${buildout:directory}/downloads
    echo ${config:postgresqlurl}
    test -e ${buildout:directory}/downloads/${config:postgres_pkg_name} || \
        wget ${config:postgresqlurl} -O ${buildout:directory}/downloads/${config:postgres_pkg_name}

[postgresql]
recipe = hexagonit.recipe.cmmi
url = ${buildout:directory}/downloads/${config:postgres_pkg_name}
#url = ${config:postgresqlurl}
md5sum = 8c905155e3e9f9367b4299a9acb41d2a
configure-options =
  --with-readline
  --enable-thread-safety


#create postgresql.conf custom file
[postgresqlconf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/postgresql.conf.in
output = ${buildout:directory}/etc/postgresql.conf

[postgresqlinit]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
    test -e ${postgresql:location}/var/data/postgresql.conf_original || \
        mv ${postgresql:location}/var/data/postgresql.conf ${postgresql:location}/var/data/postgresql.conf_original && \
        echo "original postgresql.conf finded and moved"
    test -e ${postgresql:location}/var/data/postgresql.conf || \
        ln -s ${buildout:directory}/etc/postgresql.conf ${postgresql:location}/var/data/postgresql.conf && \
        echo "custom postgresql.conf symlinked"
    ${postgresql:location}/bin/initdb -D ${postgresql:location}/var/data -E UNICODE
    ${postgresql:location}/bin/pg_ctl -D ${postgresql:location}/var/data start
    sleep 10
    ${postgresql:location}/bin/psql -d template1 -c "CREATE USER ${config:adminuser} WITH PASSWORD '${config:adminpassword}'"
    ${postgresql:location}/bin/createdb -E UTF8 ${config:dbname}
    ${postgresql:location}/bin/createlang -d ${config:dbname} plpgsql
    ${postgresql:location}/bin/pg_ctl -D ${postgresql:location}/var/data stop

[psycopg2]
recipe = zc.recipe.egg:custom
eggs = psycopg2
include-dirs =
    ${postgresql:location}/include
library-dirs =
    ${postgresql:location}/lib

[pgsql-symlinks]
recipe = cns.recipe.symlink
symlink_target = ${buildout:directory}/bin
symlink_base = ${postgresql:location}/bin
symlink =
    clusterdb
    createuser
    dropuser
    pg_config
    pg_dump
    pg_restore
    psql
    createdb
    dropdb
    ecpg
    pg_controldata
    pg_dumpall
    postgres
    reindexdb
    createlang
    droplang
    initdb
    pg_ctl
    pg_resetxlog
    postmaster
    vacuumdb

[backup]
recipe = praekelt.recipe.backup
prefix = ${config:projectname}
local_count = 2
local_storage_path = ${buildout:directory}/backups
source_path = ${postgresql:location}/var

database_engine = postgres
database_name = ${config:dbname}
database_username = ${config:adminuser}
database_password = ${config:adminpassword}

[versions]
Fabric = 1.8.0
buildout.threatlevel = 1.1
cns.recipe.symlink = 0.2.3
collective.recipe.template = 1.10
hexagonit.recipe.cmmi = 2.0
iw.recipe.cmd = 0.3
paramiko = 1.12.0
praekelt.recipe.backup = 0.0.3
pycrypto = 2.6.1
zc.buildout = 2.2.1
zc.recipe.egg = 2.0.1

# Required by:
# paramiko==1.12.0
ecdsa = 0.10

# Required by:
# hexagonit.recipe.cmmi==2.0
hexagonit.recipe.download = 1.7

